<!-- Licensed under the MIT License. -->

<Page
    x:Class="FIP.App.Views.CustomIconsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="using:FIP.Core.ViewModels"
    xmlns:appVm="using:FIP.App.ViewModels"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    x:Name="CustomIconsPageControl"
    NavigationCacheMode="Enabled"
    HighContrastAdjustment="None"
	DataContext="{x:Bind ViewModel, Mode=OneWay}"
	mc:Ignorable="d">
	<Page.Resources>
		<DataTemplate x:Key="CustomIconItem" x:DataType="models:CustomIconViewModel">
			<Border CornerRadius="4" Padding="8" Width="210" Height="200"
				Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
				<Grid Padding="8,0,8,8">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					
					<TextBlock Grid.Row="0" 
							   Style="{StaticResource SubtitleTextBlockStyle}"
							   FontSize="20" TextWrapping="NoWrap" TextLineBounds="TrimToBaseline"
							   Text="{x:Bind Name}"/>

					<Image Grid.Row="1" 
						   Stretch="UniformToFill" Margin="-12,-12,-12,0">
						<Image.Source>
							<BitmapImage UriSource="{x:Bind IconPath, Mode=OneTime}"
										 CreateOptions="IgnoreImageCache"/>
						</Image.Source>
					</Image>
				</Grid>
			</Border>
		</DataTemplate>
	</Page.Resources>

	<Grid Background="{ThemeResource HomePageBackgroundBrush}">
		<!--  Visual states reflect the application's window size  -->
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="LayoutVisualStates">
				<VisualState x:Name="WideLayout">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource Breakpoint640Plus}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState x:Name="NarrowLayout">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="contentSV.Padding" Value="12,0,12,36" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<ScrollViewer x:Name="contentSV"
                      Grid.Row="1"
                      UseSystemFocusVisuals="False"
                      VerticalScrollBarVisibility="Auto"
                      VerticalScrollMode="Auto"
                      Padding="48,12,12,36">

			<VariableSizedWrapGrid Orientation="Horizontal" MaximumRowsOrColumns="3">

				<Border Padding="16" Margin="8" CornerRadius="{StaticResource ControlCornerRadius}" 
                        Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
					<ColorPicker x:Name="MainColorPicker"
                                 ColorSpectrumShape="Box"
                                 IsMoreButtonVisible="True"
                                 IsColorSliderVisible="True"
                                 IsColorChannelTextInputVisible="True"
                                 IsHexInputVisible="True"
                                 IsAlphaEnabled="False" 
                                 ColorChanged="MainColorPickerColorChanged"
								 Loaded="MainColorPickerLoaded"
								 Color="{x:Bind ViewModel.PickedColor, Mode=TwoWay}"/>
				</Border>

				<Border Padding="16" Margin="8" CornerRadius="{StaticResource ControlCornerRadius}" 
                        Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
					<StackPanel Grid.Row="1" Spacing="16" Orientation="Vertical">
						<TextBox x:Name="NameBox" Header="Enter folder icon name:" PlaceholderText="Icon name"
                                 MaxLength="30" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
								 Text="{x:Bind ViewModel.NewCustomIcon.Name, Mode=TwoWay}">
							<TextBox.SelectionHighlightColor>
								<SolidColorBrush Color="{x:Bind ViewModel.PickedColor, Mode=OneWay}"/>
							</TextBox.SelectionHighlightColor>
						</TextBox>

						<TextBox x:Name="InfoTip" Header="Enter folder information tip:" PlaceholderText="Info tip"
								 MaxLength="30" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
								 Text="{x:Bind ViewModel.NewCustomIcon.InfoTip, Mode=TwoWay}">
							<TextBox.SelectionHighlightColor>
								<SolidColorBrush Color="{x:Bind ViewModel.PickedColor, Mode=OneWay}"/>
							</TextBox.SelectionHighlightColor>
						</TextBox>

						<AutoSuggestBox x:Name="CategorySearchBox" Header="Select category for icon:" PlaceholderText="Category"
                                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
										TextChanged="CategorySearchBoxTextChanged" 
										QuerySubmitted="CategorySearchBoxQuerySubmitted"
										Loaded="CategorySearchBoxLoaded"/>

						<Button x:Name="CreateEditButton" Content="{x:Bind ViewModel.CreateOrEditButtonContent, Mode=OneWay}"
                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                Click="CreateEditButtonClick">
							<Button.Background>
								<SolidColorBrush Color="{x:Bind ViewModel.PickedColor, Mode=OneWay}"/>
							</Button.Background>
							<Button.Foreground>
								<SolidColorBrush Color="{x:Bind ViewModel.ButtonTitleColor, Mode=OneWay}"/>
							</Button.Foreground>
						</Button>
						<Button x:Name="DeleteButton" Style="{StaticResource AccentButtonStyle}" Content="Delete Selected Icons" 
								VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
								IsEnabled="{x:Bind appVm:Converters.IsNotNullOrEmpty(ViewModel.SelectedCustomIcons), Mode=OneWay}" Click="DeleteButton_Click" />
					</StackPanel>
				</Border>
				
				<Border Padding="8" Margin="8" CornerRadius="{StaticResource ControlCornerRadius}" 
                        Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
					<canvas:CanvasControl x:Name="IconCanvas" Draw="IconCanvasDraw"
                                          CreateResources="IconCanvasCreateResources"/>
				</Border>

				<Border Padding="16" Margin="8" VariableSizedWrapGrid.ColumnSpan="3" CornerRadius="{StaticResource ControlCornerRadius}" 
                        Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}">
					<GridView x:Name="IconsGridView" ItemTemplate="{StaticResource CustomIconItem}"
							  ItemsSource="{x:Bind ViewModel.CustomIconViewModels, Mode=TwoWay}" SelectionChanged="IconsGridView_SelectionChanged"
							  IsItemClickEnabled="False" SelectionMode="Multiple" FlowDirection="LeftToRight">
						<GridView.Header>
							<Grid Margin="0,0,0,8">
								<StackPanel Orientation="Horizontal">
									<TextBlock AutomationProperties.HeadingLevel="Level1"
											   Style="{StaticResource SubtitleTextBlockStyle}"
											   Text="{x:Bind ViewModel.CurrentCategory.Name, Mode=TwoWay}" />
								</StackPanel>
								<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
									<Button x:Name="CategoryRenameButton" Content="Rename category"
											VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
											Click="CategoryRenameButtonClick" />
								</StackPanel>
							</Grid>
						</GridView.Header>
					</GridView>
				</Border>
			</VariableSizedWrapGrid>
		</ScrollViewer>
	</Grid>
</Page>
