# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - feature/*

pool:
  vmImage: 'windows-latest'

variables:
  group: BuildPipelineVariables
  solution: '**/FolderIconPainter.sln'
  testProject: '**/*.UnitTests.csproj'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  buildFolder: '$(Build.SourcesDirectory)\bin\'
  
jobs:
- job: Build
  timeoutInMinutes: 120
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: NuGetCommand@2
    displayName: Restore NuGet Packages
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'

  - task: VSBuild@1
    inputs:
      platform: '$(buildPlatform)'
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                    /p:AppxPackageDir="$(appxPackageDir)"
                    /p:AppxPackageSigningEnabled=false 
                    /p:AppxBundle=Always 
                    /p:UapAppxPackageBuildMode=StoreUpload'

# Builds unit tests
  - task: MSBuild@1
    displayName: 'Build Unit Tests'
    inputs:
      solution: '$(testProject)'
      configuration: 'Debug'
      msbuildArguments: '/t:build /restore'
      maximumCpuCount: true

  - task: VSTest@2
    displayName: 'Run Unit Tests'
    inputs:
      platform: '$(BuildPlatform)'
      configuration: 'Debug'
      testAssemblyVer2: '$(System.DefaultWorkingDirectory)\**\**\bin\Debug\**\*UnitTests.dll'
      minimumExpectedTests: 1
      failOnMinTestsNotRun: true
      codeCoverageEnabled: true
      
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx'
      searchFolder: '$(Agent.TempDirectory)'
      failTaskOnFailedTests: true
      testRunTitle: 'Unit tests'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '**/*.cobertura.xml'
      failIfCoverageEmpty: true
