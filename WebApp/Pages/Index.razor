@page "/"
@using WebApp.Shared.Components
@using WebApp.Models
@using System

<MudContainer Class="mt-6">
    <MudGrid>
        <MudItem xs="12">
            <MudGrid>
              @*  <MudItem xs="3">
                            <MudCard>
                                <MudCardContent>
                                    <DragDropZone Color=@(Cl)></DragDropZone>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                        <MudItem xs="3">
                            <MudCard>
                                <MudCardContent>
                                    <DragDropZone Color="blue"></DragDropZone>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>*@
                @for (int i = 0; i < papers; i++)
                {

                    int localindex = i;

                        <MudItem xs="@breaks[localindex]">
                            <MudCard>
                                <MudCardContent>
                                    <DragDropZone Color="@colors[localindex]"></DragDropZone>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                }
            </MudGrid>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    int papers = 16;

    int Papers
    {
        get => papers;
        set => UpdatePapers(value);
    }


    string[] colors = FolderColors.GetAllColors().ToArray();
    int[] breaks = new int[16] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };

    void UpdatePapers(int value)
    {

        int[] newbreaks = Enumerable.Repeat(3, value).ToArray();

        for (int i = 0; i < newbreaks.Length; i++)
        {
            if (i < breaks.Length)
            {
                newbreaks[i] = breaks[i];
            }
        }

        breaks = newbreaks;

        papers = value;

        StateHasChanged();
    }

    void UpdateBreaks(int index, int changeamount)
    {
        List<int> newbreaks = breaks.ToList();

        newbreaks[index] = newbreaks[index] += changeamount;

        breaks = newbreaks.ToArray();

        StateHasChanged();
    }

}